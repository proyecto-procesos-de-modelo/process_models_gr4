# Generated by Django 2.2 on 2019-05-30 14:34

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import storage_go_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Contenedor',
                'verbose_name_plural': 'Contenedores',
                'db_table': 'container',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('entry_date', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Entrada')),
                ('exit_date', models.DateTimeField(verbose_name='Fecha de Salida')),
                ('min_humidity', models.FloatField(verbose_name='Hum. Mínima')),
                ('max_humidity', models.FloatField(verbose_name='Hum. Máxima')),
                ('min_temperature', models.FloatField(verbose_name='Temp. Mínima')),
                ('max_temperature', models.FloatField(verbose_name='Temp. Máxima')),
                ('num_containers', models.PositiveIntegerField(default=1, verbose_name='Nº Contenedores')),
            ],
            options={
                'verbose_name': 'Producto',
                'verbose_name_plural': 'Productos',
                'db_table': 'product',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Abierta', 'Abierta'), ('Cerrada', 'Cerrada')], default='Cerrada', max_length=7, verbose_name='Estado')),
                ('name', models.CharField(max_length=50, verbose_name='Nombre')),
                ('humidity', models.FloatField(verbose_name='Humedad')),
                ('temperature', models.FloatField(verbose_name='Temperatura')),
                ('max_containers', models.PositiveIntegerField(default=0, verbose_name='Capacidad Máxima')),
            ],
            options={
                'verbose_name': 'Sala',
                'verbose_name_plural': 'Salas',
                'db_table': 'room',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='Nombre')),
            ],
            options={
                'verbose_name': 'Estadística',
                'verbose_name_plural': 'Estadísticas',
                'db_table': 'statistic',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='RoomMap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Disponible', 'Disponible'), ('Ocupado', 'Ocupado')], default='Disponible', max_length=10, verbose_name='Estado')),
                ('x', models.PositiveIntegerField(verbose_name='Eje X')),
                ('y', models.PositiveIntegerField(verbose_name='Eje Y')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_map', to='storage_go_app.Room', verbose_name='Sala')),
            ],
            options={
                'verbose_name': 'Mapa de Sala',
                'verbose_name_plural': 'Mapas de Sala',
                'db_table': 'room_map',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.PositiveIntegerField(verbose_name='Objeto')),
                ('description', models.TextField(verbose_name='Descripción')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType', verbose_name='Modelo')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Notificación',
                'verbose_name_plural': 'Notificaciones',
                'db_table': 'notification',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MoveTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('Completada', 'Completada'), ('Pendiente', 'Pendiente')], default='Pendiente', max_length=10, verbose_name='Estado')),
                ('priority', storage_go_app.models.IntegerRangeField(blank=True, default=1, verbose_name='Prioridad')),
                ('container', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='move_task_container', to='storage_go_app.Container', verbose_name='Contenedor')),
                ('destination', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='destination_room_map', to='storage_go_app.RoomMap', verbose_name='Destino')),
                ('worker', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='move_task_worker', to=settings.AUTH_USER_MODEL, verbose_name='Trabajador')),
            ],
            options={
                'verbose_name': 'Tarea de Movimiento',
                'verbose_name_plural': 'Tareas de Movimiento',
                'db_table': 'move_task',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='MaintenanceTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, choices=[('Completada', 'Completada'), ('Pendiente', 'Pendiente')], default='Pendiente', max_length=10, verbose_name='Estado')),
                ('priority', storage_go_app.models.IntegerRangeField(blank=True, default=1, verbose_name='Prioridad')),
                ('machine', models.CharField(blank=True, max_length=50, verbose_name='Máquina')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='maintenance_task_room', to='storage_go_app.Room', verbose_name='Sala')),
            ],
            options={
                'verbose_name': 'Tarea de Mantenimiento',
                'verbose_name_plural': 'Tareas de Mantenimiento',
                'db_table': 'maintenance_task',
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CustomPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=10, verbose_name='Tipo')),
                ('action', models.CharField(max_length=10, verbose_name='Acción')),
                ('model', models.CharField(blank=True, max_length=50, null=True, verbose_name='Modelo')),
                ('object', models.CharField(blank=True, max_length=50, null=True, verbose_name='Objeto')),
                ('attribute', models.CharField(blank=True, max_length=50, null=True, verbose_name='Atributo')),
                ('group', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='permission_group', to='auth.Group', verbose_name='Grupo')),
            ],
            options={
                'verbose_name': 'Permiso Personalizado',
                'verbose_name_plural': 'Permisos Personalizados',
                'db_table': 'custom_permission',
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='container',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='container_product', to='storage_go_app.Product', verbose_name='Producto'),
        ),
        migrations.AddField(
            model_name='container',
            name='room_map',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='container_roommap', to='storage_go_app.RoomMap', verbose_name='Ubicacion'),
        ),
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Aprobado', 'Aprobado'), ('Pendiente', 'Pendiente'), ('Cancelado', 'Cancelado')], default='Pendiente', max_length=10, verbose_name='Estado')),
                ('cantidad', models.DecimalField(blank=True, decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Precio')),
                ('descripción', models.TextField(blank=True, verbose_name='Descripción')),
                ('maintenance_task', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='budget_task', to='storage_go_app.MaintenanceTask', verbose_name='Tarea')),
            ],
            options={
                'verbose_name': 'Presupuesto',
                'verbose_name_plural': 'Presupuestos',
                'db_table': 'budget',
                'default_permissions': (),
            },
        ),
    ]
